{"version":3,"sources":["utils/Utils.js","contexts/AppContext.js","components/Display.js","components/Historico.js","components/botoes/BotaoLimpar.js","components/botoes/BotaoLimparTudo.js","components/botoes/BotaoVoltar.js","components/botoes/BotaoOperador.js","components/botoes/BotaoNumero.js","components/botoes/BotaoTrocarSinal.js","components/botoes/BotaoResultado.js","components/botoes/Botoes.js","Calculadora.js","serviceWorker.js","index.js"],"names":["retornarResultadoIndividual","operador","numero1","numero2","resultado","undefined","parseFloat","AppContext","createContext","AppProvider","props","useState","numeros","setNumeros","operadores","setOperadores","digito","setDigito","setResultado","useEffect","$display","document","querySelector","$historico","scrollLeft","scrollWidth","posicionarScrollbar","Provider","value","mNumeros","mOperadores","mDigito","mResultado","children","Display","useContext","className","Historico","historico","setHistorico","numeroMostrado","forEach","numero","index","toFixed","error","retornarResultadoGeral","BotaoLimpar","BotaoLimparTudo","BotaoVoltar","BotaoOperador","onClick","event","tempDigito","includes","length","novoOperadores","target","innerHTML","BotaoNumero","BotaoTrocarSinal","BotaoResultado","Botoes","Calculadora","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.9d22460a.chunk.js","sourcesContent":["export const posicionarScrollbar = () => {\r\n    const $display = document.querySelector('.display'),\r\n    $historico = document.querySelector('.historico');\r\n\r\n    $display.scrollLeft = $display.scrollWidth;\r\n    $historico.scrollLeft = $historico.scrollWidth;\r\n};\r\n\r\n\r\nexport const retornarResultadoGeral = (numeros, operadores) => {\r\n    let resultado = numeros[0];\r\n\r\n    numeros.forEach((numero, index) => {\r\n        if (operadores[index-1]) { \r\n            resultado = retornarResultadoIndividual(operadores[index-1], resultado, numero);\r\n        }\r\n    });\r\n\r\n    try {\r\n        return resultado.toFixed(6) * 1;\r\n    } catch (error) {}\r\n\r\n    return resultado;\r\n};\r\n\r\n\r\nexport const retornarResultadoIndividual = (operador, numero1, numero2) => {\r\n    let resultado;\r\n\r\n    if (operador === 'รท') {\r\n        resultado = (numero1 === undefined) ? numero2 : parseFloat(numero1) / parseFloat(numero2);\r\n    }\r\n    if (operador === 'ร') {\r\n        resultado = (numero1 === undefined) ? numero2 : parseFloat(numero1) * parseFloat(numero2);\r\n    }\r\n    if (operador === '-') {\r\n        resultado = (numero1 === undefined) ? numero2 : parseFloat(numero1) - parseFloat(numero2);\r\n    }\r\n    if (operador === '+') {\r\n        resultado = (numero1 === undefined) ? numero2 : parseFloat(numero1) + parseFloat(numero2);\r\n    }\r\n\r\n    return resultado;\r\n};","import React, { useState, createContext, useEffect } from 'react';\r\nimport { posicionarScrollbar } from './../utils/Utils';\r\n\r\nexport const AppContext = createContext();\r\n\r\nexport const AppProvider = (props) => {\r\n    const [numeros, setNumeros] = useState([]);\r\n    const [operadores, setOperadores] = useState([]);\r\n    const [digito, setDigito] = useState('0');\r\n    const [resultado, setResultado] = useState('0');\r\n\r\n    useEffect(() => {\r\n        posicionarScrollbar();\r\n    }, [digito, numeros, operadores, resultado]);\r\n\r\n    return (\r\n        <AppContext.Provider\r\n            value={{ \r\n                mNumeros: [numeros, setNumeros],\r\n                mOperadores: [operadores, setOperadores],\r\n                mDigito: [digito, setDigito],\r\n                mResultado: [resultado, setResultado]\r\n            }}\r\n        >\r\n            {props.children}\r\n        </AppContext.Provider>\r\n    );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { AppContext } from './../contexts/AppContext';\r\nimport \"./Display.css\";\r\n\r\nfunction Display() {\r\n    const {mResultado} = useContext(AppContext);\r\n    const [resultado] = mResultado;\r\n\r\n    return (\r\n        <div className=\"display\">{resultado}</div>\r\n    );\r\n}\r\n\r\nexport default Display;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { AppContext } from './../contexts/AppContext';\r\nimport { retornarResultadoGeral } from './../utils/Utils';\r\nimport \"./Historico.css\";\r\n\r\nfunction Historico() {\r\n    const {mNumeros, mOperadores, mResultado} = useContext(AppContext);\r\n    const [numeros] = mNumeros;\r\n    const [operadores] = mOperadores;\r\n    const setResultado = mResultado[1];\r\n    const [historico, setHistorico] = useState('');\r\n\r\n    useEffect(() => {\r\n\r\n        let numeroMostrado = '';\r\n\r\n        numeros.forEach((numero, index) => {\r\n            numeroMostrado += numero;\r\n\r\n            if (operadores[index]) {\r\n                numeroMostrado += operadores[index];\r\n            }\r\n        });\r\n\r\n        setHistorico(numeroMostrado);\r\n\r\n        setResultado(retornarResultadoGeral(numeros, operadores));\r\n\r\n    }, [numeros, operadores, setResultado]);\r\n\r\n    return (\r\n        <div className=\"historico\">{historico}</div>\r\n    );\r\n}\r\n\r\nexport default Historico;\r\n","import React from \"react\";\r\nimport \"./Botao.css\";\r\n\r\nfunction BotaoLimpar() {\r\n    return (\r\n        <div className=\"botao cinza\">CE</div>\r\n    );\r\n}\r\n\r\nexport default BotaoLimpar;\r\n","import React from \"react\";\r\nimport \"./Botao.css\";\r\n\r\nfunction BotaoLimparTudo() {\r\n    return (\r\n        <div className=\"botao cinza\">C</div>\r\n    );\r\n}\r\n\r\nexport default BotaoLimparTudo;\r\n","import React from \"react\";\r\nimport \"./Botao.css\";\r\n\r\nfunction BotaoVoltar() {\r\n    return (\r\n        <div className=\"botao cinza\">&larr;</div>\r\n    );\r\n}\r\n\r\nexport default BotaoVoltar;\r\n","import React, { useContext } from \"react\";\r\nimport { AppContext } from './../../contexts/AppContext';\r\nimport \"./Botao.css\";\r\n\r\nfunction BotaoOperador(props) {\r\n\r\n    const {mDigito, mNumeros, mOperadores} = useContext(AppContext);\r\n    const [digito, setDigito] = mDigito;\r\n    const [numeros, setNumeros] = mNumeros;\r\n    const [operadores, setOperadores] = mOperadores;\r\n\r\n    // Captura o operador digitado\r\n    function digitarOperador(event) {\r\n        const operadoresValidos = ['+', '-', 'ร', 'รท'];\r\n        let tempDigito = digito;\r\n\r\n        // se dรญgito atual ainda nรฃo existe ou jรก รฉ operador, operador nรฃo รฉ necessรกrio\r\n        if (tempDigito === '' || operadoresValidos.includes(tempDigito)) {\r\n\r\n            // Se digito atual for operador, permitir trocar รบltimo operador\r\n            if (operadores.length === numeros.length) {\r\n                const novoOperadores = [...operadores];\r\n                novoOperadores[novoOperadores.length-1] = event.target.innerHTML;\r\n                setOperadores(novoOperadores);\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        // se resultado ainda nรฃo foi requerido, formatar/adicionar dรญgito atual ao array de nรบmeros\r\n        if (tempDigito !== '=') {\r\n            // formata corretamente nรบmeros fracionais digitados\r\n            if (tempDigito * 1 === 0 || (tempDigito.length === 1 && tempDigito === '.')) {\r\n                tempDigito = '0';\r\n            } else if (tempDigito[tempDigito.length - 1] === '.') {\r\n                tempDigito += '0';\r\n            }\r\n\r\n            // adiciona nรบmero ao array de numeros\r\n            setNumeros([...numeros, tempDigito]);\r\n        }\r\n        \r\n        // atualiza o dรญgito atual\r\n        tempDigito = event.target.innerHTML;\r\n\r\n        // adicionar dรญgito atual atualiado ao array de operadores\r\n        setOperadores([...operadores, tempDigito]);\r\n        setDigito(tempDigito);\r\n    }\r\n\r\n    return (\r\n        <div className=\"botao cinza\" onClick={digitarOperador}>{props.operador}</div>\r\n    );\r\n}\r\n\r\nexport default BotaoOperador;\r\n","import React, { useContext } from \"react\";\r\nimport { AppContext } from './../../contexts/AppContext';\r\nimport \"./Botao.css\";\r\n\r\nfunction BotaoNumero(props) {\r\n\r\n    const {mDigito, mNumeros, mOperadores, mResultado} = useContext(AppContext);\r\n    const [digito, setDigito] = mDigito;\r\n    const setNumeros = mNumeros[1];\r\n    const setOperadores = mOperadores[1];\r\n    const setResultado = mResultado[1];\r\n\r\n    function digitarNumero(event) {\r\n        const operadoresValidos = ['+', '-', 'ร', 'รท'];\r\n        let tempDigito = digito;\r\n\r\n        // permitir apenas um ponto (.) no dรญgito atual\r\n        if (tempDigito.includes('.') && event.target.innerHTML === '.') return;\r\n    \r\n        if (tempDigito === '=') {\r\n            // se o resultado jรก foi requerido, limpar tudo\r\n            setNumeros([]);\r\n            setOperadores([]);\r\n            tempDigito = event.target.innerHTML;\r\n            \r\n        } else {\r\n            // se dรญgito atual รฉ operador, seta-o como zero\r\n            if (operadoresValidos.includes(tempDigito)) {\r\n                tempDigito = '0';\r\n            }\r\n    \r\n            // atualiza o dรญgito atual, se zero, atribui, senรฃo, concatena\r\n            if (tempDigito === '0') {\r\n                tempDigito = event.target.innerHTML;\r\n            } else {\r\n                tempDigito += event.target.innerHTML;\r\n            }\r\n        }\r\n\r\n        if(event.target.innerHTML === '.' && (tempDigito === '0' || tempDigito === '.')) {\r\n            tempDigito = '0' + event.target.innerHTML;\r\n        }  \r\n\r\n        setDigito(tempDigito);\r\n        setResultado(tempDigito);\r\n    }\r\n\r\n    return (\r\n        <div className=\"botao\" onClick={digitarNumero}>{props.numero}</div>\r\n    );\r\n}\r\n\r\nexport default BotaoNumero;\r\n","import React from \"react\";\r\nimport \"./Botao.css\";\r\n\r\nfunction BotaoTrocarSinal() {\r\n    return (\r\n        <div className=\"botao\">+/-</div>\r\n    );\r\n}\r\n\r\nexport default BotaoTrocarSinal;\r\n","import React from \"react\";\r\nimport \"./Botao.css\";\r\n\r\nfunction BotaoResultado() {\r\n    return (\r\n        <div className=\"botao azul\">=</div>\r\n    );\r\n}\r\n\r\nexport default BotaoResultado;\r\n","import React from \"react\";\r\nimport \"./Botoes.css\";\r\nimport BotaoLimpar from \"./BotaoLimpar\";\r\nimport BotaoLimparTudo from \"./BotaoLimparTudo\";\r\nimport BotaoVoltar from \"./BotaoVoltar\";\r\nimport BotaoOperador from \"./BotaoOperador\";\r\nimport BotaoNumero from \"./BotaoNumero\";\r\nimport BotaoTrocarSinal from \"./BotaoTrocarSinal\";\r\nimport BotaoResultado from \"./BotaoResultado\";\r\n\r\nfunction Botoes() {\r\n    return (\r\n        <div className=\"botoes\">\r\n            <div>\r\n                <BotaoLimpar />\r\n                <BotaoLimparTudo />\r\n                <BotaoVoltar />\r\n                <BotaoOperador operador=\"&divide;\" />\r\n            </div>\r\n            <div>\r\n                <BotaoNumero numero=\"7\" />\r\n                <BotaoNumero numero=\"8\" />\r\n                <BotaoNumero numero=\"9\" />\r\n                <BotaoOperador operador=\"&times;\" />\r\n            </div>\r\n            <div>\r\n                <BotaoNumero numero=\"4\" />\r\n                <BotaoNumero numero=\"5\" />\r\n                <BotaoNumero numero=\"6\" />\r\n                <BotaoOperador operador=\"-\" />\r\n            </div>\r\n            <div>\r\n                <BotaoNumero numero=\"1\" />\r\n                <BotaoNumero numero=\"2\" />\r\n                <BotaoNumero numero=\"3\" />\r\n                <BotaoOperador operador=\"+\" />\r\n            </div>\r\n            <div>\r\n                <BotaoTrocarSinal />\r\n                <BotaoNumero numero=\"0\" />\r\n                <BotaoNumero numero=\".\" />\r\n                <BotaoResultado />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Botoes;\r\n","import React from \"react\";\nimport \"./Calculadora.css\";\nimport { AppProvider } from './contexts/AppContext';\nimport Display from \"./components/Display\";\nimport Historico from \"./components/Historico\";\nimport Botoes from \"./components/botoes/Botoes\";\n\nfunction Calculadora() {\n    return (\n        <AppProvider>\n            <div className=\"calculadora\">\n                <Historico />\n                <Display />\n                <Botoes />\n            </div>\n        </AppProvider>\n    );\n}\n\nexport default Calculadora;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { \"Service-Worker\": \"script\" },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Calculadora from \"./Calculadora\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Calculadora />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}