{"version":3,"sources":["components/Display.js","components/Historico.js","components/botoes/BotaoLimpar.js","components/botoes/BotaoLimparTudo.js","components/botoes/BotaoVoltar.js","components/botoes/BotaoOperador.js","components/botoes/BotaoNumero.js","components/botoes/BotaoTrocarSinal.js","components/botoes/BotaoResultado.js","components/botoes/Botoes.js","Calculadora.js","serviceWorker.js","index.js"],"names":["Display","className","Historico","BotaoLimpar","BotaoLimparTudo","BotaoVoltar","BotaoOperador","props","operador","BotaoNumero","numero","BotaoTrocarSinal","BotaoResultado","Botoes","Calculadora","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8UASeA,MANf,WACI,OACI,yBAAKC,UAAU,WAAf,M,MCIOC,MANf,WACI,OACI,yBAAKD,UAAU,e,WCIRE,MANf,WACI,OACI,yBAAKF,UAAU,eAAf,OCIOG,MANf,WACI,OACI,yBAAKH,UAAU,eAAf,MCIOI,MANf,WACI,OACI,yBAAKJ,UAAU,eAAf,WCIOK,MANf,SAAuBC,GACnB,OACI,yBAAKN,UAAU,eAAeM,EAAMC,WCI7BC,MANf,SAAqBF,GACjB,OACI,yBAAKN,UAAU,SAASM,EAAMG,SCIvBC,MANf,WACI,OACI,yBAAKV,UAAU,SAAf,QCIOW,MANf,WACI,OACI,yBAAKX,UAAU,cAAf,MC0COY,MArCf,WACI,OACI,yBAAKZ,UAAU,UACX,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAeO,SAAS,UAE5B,6BACI,kBAAC,EAAD,CAAaE,OAAO,MACpB,kBAAC,EAAD,CAAaA,OAAO,MACpB,kBAAC,EAAD,CAAaA,OAAO,MACpB,kBAAC,EAAD,CAAeF,SAAS,UAE5B,6BACI,kBAAC,EAAD,CAAaE,OAAO,MACpB,kBAAC,EAAD,CAAaA,OAAO,MACpB,kBAAC,EAAD,CAAaA,OAAO,MACpB,kBAAC,EAAD,CAAeF,SAAS,OAE5B,6BACI,kBAAC,EAAD,CAAaE,OAAO,MACpB,kBAAC,EAAD,CAAaA,OAAO,MACpB,kBAAC,EAAD,CAAaA,OAAO,MACpB,kBAAC,EAAD,CAAeF,SAAS,OAE5B,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAaE,OAAO,MACpB,kBAAC,EAAD,CAAaA,OAAO,MACpB,kBAAC,EAAD,SCzBDI,MAVf,WACI,OACI,yBAAKb,UAAU,eACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCCQc,QACa,cAA7BC,OAAOC,SAASC,UAEiB,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,2DCZZC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,SD0HpB,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnBC,MAAK,SAACC,GACHA,EAAaC,gBAEhBC,OAAM,SAACC,GACJC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.17e26e31.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Display.css\";\r\n\r\nfunction Display() {\r\n    return (\r\n        <div className=\"display\">0</div>\r\n    );\r\n}\r\n\r\nexport default Display;\r\n","import React from \"react\";\r\nimport \"./Historico.css\";\r\n\r\nfunction Historico() {\r\n    return (\r\n        <div className=\"historico\"></div>\r\n    );\r\n}\r\n\r\nexport default Historico;\r\n","import React from \"react\";\r\nimport \"./Botao.css\";\r\n\r\nfunction BotaoLimpar() {\r\n    return (\r\n        <div className=\"botao cinza\">CE</div>\r\n    );\r\n}\r\n\r\nexport default BotaoLimpar;\r\n","import React from \"react\";\r\nimport \"./Botao.css\";\r\n\r\nfunction BotaoLimparTudo() {\r\n    return (\r\n        <div className=\"botao cinza\">C</div>\r\n    );\r\n}\r\n\r\nexport default BotaoLimparTudo;\r\n","import React from \"react\";\r\nimport \"./Botao.css\";\r\n\r\nfunction BotaoVoltar() {\r\n    return (\r\n        <div className=\"botao cinza\">&larr;</div>\r\n    );\r\n}\r\n\r\nexport default BotaoVoltar;\r\n","import React from \"react\";\r\nimport \"./Botao.css\";\r\n\r\nfunction BotaoOperador(props) {\r\n    return (\r\n        <div className=\"botao cinza\">{props.operador}</div>\r\n    );\r\n}\r\n\r\nexport default BotaoOperador;\r\n","import React from \"react\";\r\nimport \"./Botao.css\";\r\n\r\nfunction BotaoNumero(props) {\r\n    return (\r\n        <div className=\"botao\">{props.numero}</div>\r\n    );\r\n}\r\n\r\nexport default BotaoNumero;\r\n","import React from \"react\";\r\nimport \"./Botao.css\";\r\n\r\nfunction BotaoTrocarSinal() {\r\n    return (\r\n        <div className=\"botao\">+/-</div>\r\n    );\r\n}\r\n\r\nexport default BotaoTrocarSinal;\r\n","import React from \"react\";\r\nimport \"./Botao.css\";\r\n\r\nfunction BotaoResultado() {\r\n    return (\r\n        <div className=\"botao azul\">=</div>\r\n    );\r\n}\r\n\r\nexport default BotaoResultado;\r\n","import React from \"react\";\r\nimport \"./Botoes.css\";\r\nimport BotaoLimpar from \"./BotaoLimpar\";\r\nimport BotaoLimparTudo from \"./BotaoLimparTudo\";\r\nimport BotaoVoltar from \"./BotaoVoltar\";\r\nimport BotaoOperador from \"./BotaoOperador\";\r\nimport BotaoNumero from \"./BotaoNumero\";\r\nimport BotaoTrocarSinal from \"./BotaoTrocarSinal\";\r\nimport BotaoResultado from \"./BotaoResultado\";\r\n\r\nfunction Botoes() {\r\n    return (\r\n        <div className=\"botoes\">\r\n            <div>\r\n                <BotaoLimpar />\r\n                <BotaoLimparTudo />\r\n                <BotaoVoltar />\r\n                <BotaoOperador operador=\"&divide;\" />\r\n            </div>\r\n            <div>\r\n                <BotaoNumero numero=\"7\" />\r\n                <BotaoNumero numero=\"8\" />\r\n                <BotaoNumero numero=\"9\" />\r\n                <BotaoOperador operador=\"&times;\" />\r\n            </div>\r\n            <div>\r\n                <BotaoNumero numero=\"4\" />\r\n                <BotaoNumero numero=\"5\" />\r\n                <BotaoNumero numero=\"6\" />\r\n                <BotaoOperador operador=\"-\" />\r\n            </div>\r\n            <div>\r\n                <BotaoNumero numero=\"1\" />\r\n                <BotaoNumero numero=\"2\" />\r\n                <BotaoNumero numero=\"3\" />\r\n                <BotaoOperador operador=\"+\" />\r\n            </div>\r\n            <div>\r\n                <BotaoTrocarSinal />\r\n                <BotaoNumero numero=\"0\" />\r\n                <BotaoNumero numero=\".\" />\r\n                <BotaoResultado />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Botoes;\r\n","import React from \"react\";\nimport \"./Calculadora.css\";\nimport Display from \"./components/Display\";\nimport Historico from \"./components/Historico\";\nimport Botoes from \"./components/botoes/Botoes\";\n\nfunction Calculadora() {\n    return (\n        <div className=\"calculadora\">\n            <Historico />\n            <Display />\n            <Botoes />\n        </div>\n    );\n}\n\nexport default Calculadora;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { \"Service-Worker\": \"script\" },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Calculadora from \"./Calculadora\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Calculadora />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}