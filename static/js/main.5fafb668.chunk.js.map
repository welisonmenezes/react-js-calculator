{"version":3,"sources":["utils/Utils.js","contexts/AppContext.js","components/Display.js","components/Historico.js","components/botoes/BotaoLimpar.js","components/botoes/BotaoLimparTudo.js","components/botoes/BotaoVoltar.js","components/botoes/BotaoOperador.js","components/botoes/BotaoNumero.js","components/botoes/BotaoTrocarSinal.js","components/botoes/BotaoResultado.js","components/botoes/Botoes.js","Calculadora.js","serviceWorker.js","index.js"],"names":["operadoresValidos","naoNumeros","concat","retornarResultadoIndividual","operador","numero1","numero2","resultado","undefined","parseFloat","AppContext","createContext","AppProvider","props","useState","numeros","setNumeros","operadores","setOperadores","digito","setDigito","setResultado","historico","setHistorico","useEffect","$display","document","querySelector","$historico","scrollLeft","scrollWidth","posicionarScrollbar","numeroMostrado","forEach","numero","index","resultadoCalculado","toFixed","error","retornarResultadoGeral","Provider","value","mNumeros","mOperadores","mDigito","mResultado","mHistorico","children","Display","useContext","className","Historico","BotaoLimpar","onClick","BotaoLimparTudo","BotaoVoltar","tempDigito","includes","slice","length","BotaoOperador","event","novoOperadores","target","innerHTML","BotaoNumero","setTimeout","BotaoTrocarSinal","primeiroCaracter","charAt","substring","BotaoResultado","Botoes","Calculadora","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.5fafb668.chunk.js","sourcesContent":["export const operadoresValidos = ['+', '-', '×', '÷'];\r\n\r\nexport const naoNumeros = operadoresValidos.concat(['.', '=', 'C', 'CE', '=/-']);\r\n\r\nexport const posicionarScrollbar = () => {\r\n    const $display = document.querySelector('.display'),\r\n    $historico = document.querySelector('.historico');\r\n\r\n    $display.scrollLeft = $display.scrollWidth;\r\n    $historico.scrollLeft = $historico.scrollWidth;\r\n};\r\n\r\n\r\nexport const retornarResultadoGeral = (numeros, operadores) => {\r\n    let resultado = numeros[0];\r\n\r\n    numeros.forEach((numero, index) => {\r\n        if (operadores[index-1]) { \r\n            resultado = retornarResultadoIndividual(operadores[index-1], resultado, numero);\r\n        }\r\n    });\r\n\r\n    try {\r\n        return resultado.toFixed(6) * 1;\r\n    } catch (error) {}\r\n\r\n    return resultado;\r\n};\r\n\r\n\r\nexport const retornarResultadoIndividual = (operador, numero1, numero2) => {\r\n    let resultado;\r\n\r\n    if (operador === '÷') {\r\n        resultado = (numero1 === undefined) ? numero2 : parseFloat(numero1) / parseFloat(numero2);\r\n    }\r\n    if (operador === '×') {\r\n        resultado = (numero1 === undefined) ? numero2 : parseFloat(numero1) * parseFloat(numero2);\r\n    }\r\n    if (operador === '-') {\r\n        resultado = (numero1 === undefined) ? numero2 : parseFloat(numero1) - parseFloat(numero2);\r\n    }\r\n    if (operador === '+') {\r\n        resultado = (numero1 === undefined) ? numero2 : parseFloat(numero1) + parseFloat(numero2);\r\n    }\r\n\r\n    return resultado;\r\n};","import React, { useState, createContext, useEffect } from 'react';\r\nimport { posicionarScrollbar, retornarResultadoGeral } from './../utils/Utils';\r\n\r\nexport const AppContext = createContext();\r\n\r\nexport const AppProvider = (props) => {\r\n    const [numeros, setNumeros] = useState([]);\r\n    const [operadores, setOperadores] = useState([]);\r\n    const [digito, setDigito] = useState('0');\r\n    const [resultado, setResultado] = useState('0');\r\n    const [historico, setHistorico] = useState('');\r\n\r\n    useEffect(() => {\r\n        posicionarScrollbar();\r\n    }, [digito, numeros, operadores, resultado]);\r\n\r\n    \r\n    useEffect(() => {\r\n        let numeroMostrado = '';\r\n\r\n        numeros.forEach((numero, index) => {\r\n            numeroMostrado += numero;\r\n\r\n            if (operadores[index]) {\r\n                numeroMostrado += operadores[index];\r\n            }\r\n        });\r\n\r\n        setHistorico(numeroMostrado);\r\n\r\n        let resultadoCalculado = retornarResultadoGeral(numeros, operadores);\r\n\r\n        if (resultadoCalculado === undefined) {\r\n            setResultado('0');\r\n        } else {\r\n            setResultado(resultadoCalculado);\r\n        }\r\n\r\n    }, [numeros, operadores, setResultado]);\r\n\r\n    return (\r\n        <AppContext.Provider\r\n            value={{ \r\n                mNumeros: [numeros, setNumeros],\r\n                mOperadores: [operadores, setOperadores],\r\n                mDigito: [digito, setDigito],\r\n                mResultado: [resultado, setResultado],\r\n                mHistorico: [historico, setHistorico]\r\n            }}\r\n        >\r\n            {props.children}\r\n        </AppContext.Provider>\r\n    );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { AppContext } from './../contexts/AppContext';\r\nimport \"./Display.css\";\r\n\r\nfunction Display() {\r\n    const {mResultado} = useContext(AppContext);\r\n    const [resultado] = mResultado;\r\n\r\n    return (\r\n        <div className=\"display\">{resultado}</div>\r\n    );\r\n}\r\n\r\nexport default Display;\r\n","import React, { useContext } from \"react\";\r\nimport { AppContext } from './../contexts/AppContext';\r\n\r\nimport \"./Historico.css\";\r\n\r\nfunction Historico() {\r\n\r\n    const {mHistorico} = useContext(AppContext);\r\n    const historico = mHistorico[0];\r\n\r\n    return (\r\n        <div className=\"historico\">{historico}</div>\r\n    );\r\n}\r\n\r\nexport default Historico;\r\n","import React, { useContext } from \"react\";\r\nimport { AppContext } from './../../contexts/AppContext';\r\nimport \"./Botao.css\";\r\n\r\nfunction BotaoLimpar() {\r\n\r\n    const {mDigito, mNumeros, mOperadores, mResultado} = useContext(AppContext);\r\n    const [digito, setDigito] = mDigito;\r\n    const setNumeros = mNumeros[1];\r\n    const setResultado = mResultado[1];\r\n    const setOperadores = mOperadores[1];\r\n\r\n\r\n    function limparDigitoAtual() {\r\n        \r\n        // se resultado já foi requerido, limpar tudo\r\n        if (digito === '=') {\r\n            setNumeros([]);\r\n            setOperadores([]);\r\n            setDigito('0');\r\n            setResultado('0');\r\n        } else {\r\n            setDigito('0');\r\n            setResultado('0');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"botao cinza\" onClick={limparDigitoAtual}>CE</div>\r\n    );\r\n}\r\n\r\nexport default BotaoLimpar;\r\n","import React, { useContext } from \"react\";\r\nimport { AppContext } from './../../contexts/AppContext';\r\nimport \"./Botao.css\";\r\n\r\nfunction BotaoLimparTudo() {\r\n\r\n    const {mDigito, mNumeros, mOperadores, mResultado} = useContext(AppContext);\r\n    const setDigito = mDigito[1];\r\n    const setNumeros = mNumeros[1];\r\n    const setResultado = mResultado[1];\r\n    const setOperadores = mOperadores[1];\r\n\r\n    function limparTudo() {\r\n        setNumeros([]);\r\n        setOperadores([]);\r\n        setDigito('0');\r\n        setResultado('0');\r\n    }\r\n    \r\n    return (\r\n        <div className=\"botao cinza\" onClick={limparTudo}>C</div>\r\n    );\r\n}\r\n\r\nexport default BotaoLimparTudo;\r\n","import React, { useContext } from \"react\";\r\nimport { AppContext } from './../../contexts/AppContext';\r\nimport { operadoresValidos } from './../../utils/Utils';\r\nimport \"./Botao.css\";\r\n\r\nfunction BotaoVoltar() {\r\n\r\n    const {mDigito, mResultado} = useContext(AppContext);\r\n    const [digito, setDigito] = mDigito;\r\n    const setResultado = mResultado[1];\r\n\r\n    function voltarDigito() {\r\n        let tempDigito = digito;\r\n\r\n        // se resultado já foi requerido, faça nada\r\n        if (tempDigito === '=') {\r\n            return;\r\n        }\r\n    \r\n        // se dígito atual não for um operador\r\n        if (! operadoresValidos.includes(tempDigito)) {\r\n            tempDigito = tempDigito.slice(0, -1);\r\n    \r\n            if (tempDigito.length < 1) {\r\n                tempDigito = '0';\r\n            }\r\n    \r\n            setDigito(tempDigito);\r\n            setResultado(tempDigito);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"botao cinza\" onClick={voltarDigito}>&larr;</div>\r\n    );\r\n}\r\n\r\nexport default BotaoVoltar;\r\n","import React, { useContext } from \"react\";\r\nimport { AppContext } from './../../contexts/AppContext';\r\nimport { operadoresValidos } from './../../utils/Utils';\r\nimport \"./Botao.css\";\r\n\r\nfunction BotaoOperador(props) {\r\n\r\n    const {mDigito, mNumeros, mOperadores} = useContext(AppContext);\r\n    const [digito, setDigito] = mDigito;\r\n    const [numeros, setNumeros] = mNumeros;\r\n    const [operadores, setOperadores] = mOperadores;\r\n\r\n    // Captura o operador digitado\r\n    function digitarOperador(event) {\r\n        let tempDigito = digito;\r\n\r\n        // se dígito atual ainda não existe ou já é operador, operador não é necessário\r\n        if (tempDigito === '' || operadoresValidos.includes(tempDigito)) {\r\n\r\n            // Se digito atual for operador, permitir trocar último operador\r\n            if (operadores.length === numeros.length) {\r\n                const novoOperadores = [...operadores];\r\n                novoOperadores[novoOperadores.length-1] = event.target.innerHTML;\r\n                setOperadores(novoOperadores);\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        // se resultado ainda não foi requerido, formatar/adicionar dígito atual ao array de números\r\n        if (tempDigito !== '=') {\r\n            // formata corretamente números fracionais digitados\r\n            if (tempDigito * 1 === 0 || (tempDigito.length === 1 && tempDigito === '.')) {\r\n                tempDigito = '0';\r\n            } else if (tempDigito[tempDigito.length - 1] === '.') {\r\n                tempDigito += '0';\r\n            }\r\n\r\n            // adiciona número ao array de numeros\r\n            setNumeros([...numeros, tempDigito]);\r\n        }\r\n        \r\n        // atualiza o dígito atual\r\n        tempDigito = event.target.innerHTML;\r\n\r\n        // adicionar dígito atual atualiado ao array de operadores\r\n        setOperadores([...operadores, tempDigito]);\r\n        setDigito(tempDigito);\r\n    }\r\n\r\n    return (\r\n        <div className=\"botao cinza\" onClick={digitarOperador}>{props.operador}</div>\r\n    );\r\n}\r\n\r\nexport default BotaoOperador;\r\n","import React, { useContext } from \"react\";\r\nimport { AppContext } from './../../contexts/AppContext';\r\nimport { operadoresValidos } from './../../utils/Utils';\r\nimport \"./Botao.css\";\r\n\r\nfunction BotaoNumero(props) {\r\n\r\n    const {mDigito, mNumeros, mOperadores, mResultado} = useContext(AppContext);\r\n    const [digito, setDigito] = mDigito;\r\n    const setNumeros = mNumeros[1];\r\n    const setOperadores = mOperadores[1];\r\n    const setResultado = mResultado[1];\r\n\r\n    function digitarNumero(event) {\r\n        let tempDigito = digito;\r\n\r\n        // permitir apenas um ponto (.) no dígito atual\r\n        if (tempDigito.includes('.') && event.target.innerHTML === '.') return;\r\n    \r\n        if (tempDigito === '=') {\r\n            // se o resultado já foi requerido, limpar tudo\r\n            setNumeros([]);\r\n            setOperadores([]);\r\n            tempDigito = event.target.innerHTML;\r\n            \r\n        } else {\r\n            // se dígito atual é operador, seta-o como zero\r\n            if (operadoresValidos.includes(tempDigito)) {\r\n                tempDigito = '0';\r\n            }\r\n    \r\n            // atualiza o dígito atual, se zero, atribui, senão, concatena\r\n            if (tempDigito === '0') {\r\n                tempDigito = event.target.innerHTML;\r\n            } else {\r\n                tempDigito += event.target.innerHTML;\r\n            }\r\n        }\r\n\r\n        if(event.target.innerHTML === '.' && (tempDigito === '0' || tempDigito === '.')) {\r\n            tempDigito = '0' + event.target.innerHTML;\r\n        }  \r\n\r\n        setTimeout(() => {\r\n            setDigito(tempDigito);\r\n            setResultado(tempDigito);\r\n        }, 1);\r\n    }\r\n\r\n    return (\r\n        <div className=\"botao\" onClick={digitarNumero}>{props.numero}</div>\r\n    );\r\n}\r\n\r\nexport default BotaoNumero;\r\n","import React, { useContext } from \"react\";\r\nimport { AppContext } from './../../contexts/AppContext';\r\nimport { naoNumeros } from './../../utils/Utils';\r\nimport \"./Botao.css\";\r\n\r\nfunction BotaoTrocarSinal() {\r\n\r\n    const {mDigito, mNumeros, mOperadores, mResultado} = useContext(AppContext);\r\n    const setNumeros = mNumeros[1];\r\n    const setResultado = mResultado[1];\r\n    const setOperadores = mOperadores[1];\r\n    const [digito, setDigito] = mDigito;\r\n\r\n    function trocarSinal() {\r\n        let tempDigito = digito;\r\n\r\n        // se resultado já foi requerido, limpar tudo\r\n        if (tempDigito === '=') {\r\n            setNumeros([]);\r\n            setOperadores([]);\r\n            setDigito('0');\r\n            setResultado('0');\r\n        }\r\n    \r\n        // se dígito atual é numero válido e maior que zero\r\n        if (! naoNumeros.includes(tempDigito) && parseFloat(tempDigito) * 1 !== 0) {\r\n            const primeiroCaracter = tempDigito.charAt(0);\r\n    \r\n            if (primeiroCaracter === '-') {\r\n                tempDigito = tempDigito.substring(1);\r\n    \r\n            } else {\r\n                tempDigito = '-' + tempDigito;\r\n            }\r\n    \r\n            //atualizarDisplay(tempDigito);\r\n            setDigito(tempDigito);\r\n            setResultado(tempDigito);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"botao\" onClick={trocarSinal}>+/-</div>\r\n    );\r\n}\r\n\r\nexport default BotaoTrocarSinal;\r\n","import React, { useContext } from \"react\";\r\nimport { AppContext } from './../../contexts/AppContext';\r\nimport { naoNumeros } from './../../utils/Utils';\r\nimport \"./Botao.css\";\r\n\r\nfunction BotaoResultado() {\r\n\r\n    const {mDigito, mNumeros} = useContext(AppContext);\r\n    const [digito, setDigito] = mDigito;\r\n    const [numeros, setNumeros] = mNumeros;\r\n\r\n    function mostrarResultado(event) {\r\n        // se resultado ainda não foi requerido\r\n        if (digito !== '=') {\r\n    \r\n            // se é número válido, atualizar array de números\r\n            if (! naoNumeros.includes(digito)) {\r\n                setNumeros([...numeros, digito]);\r\n            }\r\n\r\n            setDigito(event.target.innerHTML);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"botao azul\" onClick={mostrarResultado}>=</div>\r\n    );\r\n}\r\n\r\nexport default BotaoResultado;\r\n","import React from \"react\";\r\nimport \"./Botoes.css\";\r\nimport BotaoLimpar from \"./BotaoLimpar\";\r\nimport BotaoLimparTudo from \"./BotaoLimparTudo\";\r\nimport BotaoVoltar from \"./BotaoVoltar\";\r\nimport BotaoOperador from \"./BotaoOperador\";\r\nimport BotaoNumero from \"./BotaoNumero\";\r\nimport BotaoTrocarSinal from \"./BotaoTrocarSinal\";\r\nimport BotaoResultado from \"./BotaoResultado\";\r\n\r\nfunction Botoes() {\r\n    return (\r\n        <div className=\"botoes\">\r\n            <div>\r\n                <BotaoLimpar />\r\n                <BotaoLimparTudo />\r\n                <BotaoVoltar />\r\n                <BotaoOperador operador=\"&divide;\" />\r\n            </div>\r\n            <div>\r\n                <BotaoNumero numero=\"7\" />\r\n                <BotaoNumero numero=\"8\" />\r\n                <BotaoNumero numero=\"9\" />\r\n                <BotaoOperador operador=\"&times;\" />\r\n            </div>\r\n            <div>\r\n                <BotaoNumero numero=\"4\" />\r\n                <BotaoNumero numero=\"5\" />\r\n                <BotaoNumero numero=\"6\" />\r\n                <BotaoOperador operador=\"-\" />\r\n            </div>\r\n            <div>\r\n                <BotaoNumero numero=\"1\" />\r\n                <BotaoNumero numero=\"2\" />\r\n                <BotaoNumero numero=\"3\" />\r\n                <BotaoOperador operador=\"+\" />\r\n            </div>\r\n            <div>\r\n                <BotaoTrocarSinal />\r\n                <BotaoNumero numero=\"0\" />\r\n                <BotaoNumero numero=\".\" />\r\n                <BotaoResultado />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Botoes;\r\n","import React from \"react\";\nimport \"./Calculadora.css\";\nimport { AppProvider } from './contexts/AppContext';\nimport Display from \"./components/Display\";\nimport Historico from \"./components/Historico\";\nimport Botoes from \"./components/botoes/Botoes\";\n\nfunction Calculadora() {\n    return (\n        <AppProvider>\n            <div className=\"calculadora\">\n                <Historico />\n                <Display />\n                <Botoes />\n            </div>\n        </AppProvider>\n    );\n}\n\nexport default Calculadora;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { \"Service-Worker\": \"script\" },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Calculadora from \"./Calculadora\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Calculadora />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}